1、元组（Tuple）
元组是有序且不可更改的集合。在 Python 中，元组是用圆括号编写的。
thistuple = ("apple", "banana", "cherry")
print(thistuple)

2、访问元组项目
您可以通过引用方括号内的索引号来访问元组项目：
print(thistuple[0])

3、负索引
负索引表示从末尾开始，-1 表示最后一个项目，-2 表示倒数第二个项目，依此类推。
print(thistuple[-1])

4、索引范围
您可以通过指定范围的起点和终点来指定索引范围。
指定范围后，返回值将是带有指定项目的新元组。
print(thistuple[0:2])
注释：搜索将从索引 0（包括）开始，到索引 2（不包括）结束。
请记住，第一项的索引为 0。

5、更改元组值
创建元组后，您将无法更改其值。元组是不可变的，或者也称为恒定的。
但是有一种解决方法。您可以将元组转换为列表，更改列表，然后将列表转换回元组。
x = ("apple", "banana", "cherry")
y = list(x)
y[1] = "kiwi"
x = tuple(y)
print(x)

6、遍历元组
您可以使用 for 循环遍历元组项目。
thistuple = ("apple", "banana", "cherry")
for x in thistuple:
  print(x)

7、检查项目是否存在
要确定元组中是否存在指定的项，请使用 in 关键字：
print("apple" in x)
print("apple" not in x)

8、元组长度
要确定元组有多少项，请使用 len() 方法：
print(len(x))

9、添加项目
元组一旦创建，您就无法向其添加项目。元组是不可改变的。

10、创建有一个项目的元组
如需创建仅包含一个项目的元组，您必须在该项目后添加一个逗号，
否则 Python 无法将变量识别为元组。
thislist = ["apple"] 	#不需添加逗号
thistuple =("apple",)	#必须添加逗号
print(thislist)
print(thistuple)

11、删除项目
注释：您无法删除元组中的项目。
元组是不可更改的，因此您无法从中删除项目，但您可以完全删除元组：
del 关键字可以完全删除元组：

12、合并两个元组
如需连接两个或多个元组，您可以使用 + 运算符：
x=('a','b','c')
y=('1','2','3')
z=x+y
print(z)

13、tuple() 构造函数
也可以使用 tuple() 构造函数来创建元组。
x = tuple(('1', '2', '3')) #请注意双括号
print(x)

14、元组方法
Python 提供两个可以在元组上使用的内建方法。
方法	描述
count()	返回元组中指定值出现的次数。
index()	在元组中搜索指定的值并返回它被找到的位置。