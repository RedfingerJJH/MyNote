1、集合（Set）
集合是无序和无索引的集合。在 Python 中，集合用花括号编写。
thisset = {"apple", "banana", "cherry"}
print(thisset)
注释：集合是无序的，因此您无法确定项目的显示顺序。

2、访问项目
您无法通过引用索引来访问 set 中的项目，因为 set 是无序的，项目没有索引。
但是您可以使用 for 循环遍历 set 项目，或者使用 in 关键字查询集合中是否存在指定值。

3、更改项目
集合一旦创建，您就无法更改项目，但是您可以添加新项目。
要将一个项添加到集合，请使用 add() 方法。
thisset.add("orange")
print(thisset)
要向集合中添加多个项目，请使用 update() 方法。
thisset.update(["orange", "mango", "grapes"])
print(thisset)

4、获取 Set 的长度
要确定集合中有多少项，请使用 len() 方法。
print(len(thisset))

5、删除项目
要删除集合中的项目，请使用 remove() 或 discard() 方法。
thisset.remove("banana")
print(thisset)
注释：如果要删除的项目不存在，则 remove() 将引发错误。
thisset.discard("banana")
print(thisset)
注释：如果要删除的项目不存在，discard() 不会引发错误。

您还可以使用 pop() 方法删除项目，但此方法将删除最后一项。
请记住，set 是无序的，因此您不会知道被删除的是什么项目。
pop() 方法的返回值是被删除的项目。
x = thisset.pop()
print(x)

clear() 方法清空集合：
thisset.clear()
print(thisset)

del 彻底删除集合：
del thisset
print(thisset)

6、合并两个集合
在 Python 中，有几种方法可以连接两个或多个集合。
您可以使用 union() 方法返回包含两个集合中所有项目的新集合，
set1 = {"a", "b" , "c"}
set2 = {1, 2, 3}
set3 = set1.union(set2)
print(set3)
也可以使用 update() 方法将一个集合中的所有项目插入另一个集合中：
set1.update(set2)
print(set1)

7、set() 构造函数
也可以使用 set() 构造函数来创建集合。
thisset = set(("apple", "banana", "cherry")) # 请留意这个双括号
print(thisset)

8、Set 方法
Python 拥有一套能够在集合（set）上使用的内建方法。
方法				描述
add()				向集合添加元素。
clear()				删除集合中的所有元素。
copy()				返回集合的副本。
difference()		返回包含两个或更多集合之间差异的集合。
difference_update()	删除此集合中也包含在另一个指定集合中的项目。
discard()			删除指定项目。
intersection()		返回为两个其他集合的交集的集合。
intersection_update()	删除此集合中不存在于其他指定集合中的项目。
isdisjoint()			返回两个集合是否有交集。
issubset()				返回另一个集合是否包含此集合。
issuperset()			返回此集合是否包含另一个集合。
pop()					从集合中删除一个元素。
remove()				删除指定元素。
symmetric_difference()	返回具有两组集合的对称差集的集合。
symmetric_difference_update()	插入此集合和另一个集合的对称差集。
union()							返回包含集合并集的集合。
update()						用此集合和其他集合的并集来更新集合。