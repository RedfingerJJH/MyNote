busy:https://busybox.net 

cd /nfsboot/
mkdir rootfs

tar -vxjf busybox-1.29.0.tar.bz2

取消busybox对中文显示的限制：
busybox-1.29.0/libbb/printable_string.c
第 31 和 32 行，当字符大于 0X7F 以后就跳出去了。 
	/* if (c >= 0x7f)
		break; */
第 45 和 46 行，如果支持 UNICODE 码的话，当字符大于 0X7F 就直接输出‘?’。 
		/* if (c < ' ' || c >= 0x7f) */
        if( c < ' ')
		
接着打开文件 busybox-1.29.0/libbb/unicode.c
第 1022 行，当字符大于 0X7F 以后，*d++就为‘?’。 
	/* *d++ = (c >= ' ' && c < 0x7f) ? c : '?'; */ 
    *d++ = (c >= ' ') ? c : '?'; 

第 1030 和 1031 行，当字符大于 0X7F 以后，*d 也为‘?’。 
	/* if (c < ' ' || c >= 0x7f) */ 
    if(c < ' ') 

配置busybox：
①、defconfig，缺省配置，也就是默认配置选项
②、allyesconfig，全选配置，也就是选中 busybox 的所有功能
③、allnoconfig，最小配置

make defconfig
make menuconfig

Location:
	-> Settings
		-> Build static binary (no shared libs)，不选中，动态编译。
		
Location:
	->Settings
		-> vi-style line editing commands，选中
		
Location:
	-> Linux Module Utilities
			-> Simplified modutils，取消
			
Location:
	-> Linux System Utilities
		-> mdev (16 kb) //确保下面的全部选中，默认都是选中的
		
Location:
	-> Settings
		-> SupportUnicode //选中
		-> Check $LC_ALL, $LC_CTYPE and $LANG environment variables //选中

make install CONFIG_PREFIX=/nfsboot/rootfs

如果 bootargs 设置 init=/linuxrc，那么 linuxrc 就是可以
作为用户空间的 init 程序，所以用户态空间的 init 程序是 busybox 来生成的

cd /nfsboot/rootfs/
mkdir lib
cd /usr/local/arm/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf/arm-linux-gnueabihf/libc/lib/
cp *so* *.a /nfsboot/rootfs/lib/ -d 
后面的“-d”表示拷贝符号链接
cd /nfsboot/rootfs/lib/
rm ld-linux-armhf.so.3
cd /usr/local/arm/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf/arm-linux-gnueabihf/libc/lib/
cp ld-linux-armhf.so.3 /nfsboot/rootfs/lib/
cd /usr/local/arm/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf/arm-linux-gnueabihf/lib/
cp *so* *.a /nfsboot/rootfs/lib/ -d

cd /nfsboot/rootfs/usr/
mkdir lib
cd /usr/local/arm/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf/arm-linux-gnueabihf/libc/usr/lib/
cp *so* *.a /nfsboot/rootfs/usr/lib/ -d

cd /nfsboot/rootfs/
du ./lib ./usr/lib/ -sh

mkdir dev
mkdir proc
mkdir mnt
mkdir sys
mkdir tmp
mkdir root

uboot 里面的 bootargs 环境变量会设置“root”的值，所以我们将 root 的值改为 NFS 挂载即可。
在  Linux  内核源码里面有相应的文档讲解如何设置，文档为  Documentation/filesystems/nfs/ 
nfsroot.txt，格式如下： 
root=/dev/nfs  nfsroot=[<server-ip>:]<root-dir>[,<nfs-options>]  ip=<client-ip>:<server-ip>:<gw-
ip>:<netmask>:<hostname>:<device>:<autoconf>:<dns0-ip>:<dns1-ip> 
<server-ip>：服务器 IP 地址， 
<root-dir>：根文件系统的存放路径，比如我的就是/home/zuozhongkai/linux/nfs/rootfs。 
<nfs-options>：NFS 的其他可选选项，一般不设置。 
<client-ip>：客户端 IP 地址。 
<server-ip>：服务器 IP 地址，前面已经说了。 
<gw-ip>：网关地址，我的就是 192.168.1.1。 
<netmask>：子网掩码，我的就是 255.255.255.0。 
<hostname>：客户机的名字，一般不设置，此值可以空着。 
<device>：设备名，也就是网卡名，一般是 eth0，eth1….，正点原子的 I.MX6U-ALPHA 开
发板的 ENET2 为 eth0，ENET1 为 eth1。如果你的电脑只有一个网卡，那么基本只能是 eth0。
这里我们使用 ENET2，所以网卡名就是 eth0。 
<autoconf>：自动配置，一般不使用，所以设置为 off。 
<dns0-ip>：DNS0 服务器 IP 地址，不使用。 
<dns1-ip>：DNS1 服务器 IP 地址，不使用。 

root=/dev/nfs rw nfsroot=192.168.0.250:/nfsboot/rootfs ip=192.168.0.125:192.168.0.250:192.168.0.1:255.255.255.0::eth0:off 

setenv bootargs 'console=ttymxc0,115200 root=/dev/nfs rw nfsroot=192.168.0.250:/nfsboot/rootfs ip=192.168.0.125:192.168.0.250:192.168.0.1:255.255.255.0::eth0:off'
saveenv

cd /nfsboot/rootfs/
mkdir -p etc/init.d/
cd etc/init.d/
vim rcS
#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin:$PATH
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib:/usr/lib
export PATH LD_LIBRARY_PATH

mount -a
mkdir /dev/pts
mount -t devpts devpts /dev/pts

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

chmod 777 rcS

<file system> 	<mount point>	<type> 	<options> 	<dump>	<pass>
<file system>：要挂载的特殊的设备，也可以是块设备，比如/dev/sda 等等。
<mount point>：挂载点。
<type>：文件系统类型，比如 ext2、ext3、proc、romfs、tmpfs 等等。 
<options>：挂载选项，在 Ubuntu 中输入“man mount”命令可以查看具体的选项。一般使用 defaults，也就是默认选项，defaults包含了rw、suid、dev、exec、auto、nouser和async。 
<dump>：为 1 的话表示允许备份，为 0 不备份，一般不备份，因此设置为 0。 
<pass>：磁盘检查设置，为 0 表示不检查。根目录‘/’设置为 1，其他的都不能设置为 1，
其他的分区从 2 开始。一般不在 fstab 中挂载根目录，因此这里一般设置为 0。 

cd ..
vim fstab
#<file system>	<mount point>	<type>	<options>	<dump>	<pass>
proc	/proc	proc	defaults	0	0
tmpfs	/tmp	tmpfs	defaults	0	0
sysfs	/sys	sysfs	defaults	0	0

<id>:<runlevels>:<action>:<process>
<id>：每个指令的标识符，不能重复。但是对于 busybox 的 init 来说，<id>有着特殊意义
<runlevels>：对 busybox 来说此项完全没用，所以空着
<action>：动作，用于指定<process>可能用到的动作
<process>：具体的动作，比如程序、脚本或命令等
vim inittab
#etc/inittab
::sysinit:/etc/init.d/rcS
console::askfirst:-/bin/sh
::restart:/sbin/init
::ctrlaltdel:/sbin/reboot
::shutdown:/bin/umount -a -r
::shutdown:/sbin/swapoff -a

vim resolv.conf
nameserver 114.114.114.114
nameserver 192.168.1.1
nameserver表示这是个域名服务器